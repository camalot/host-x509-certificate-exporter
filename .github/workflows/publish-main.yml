name: Host-X509-Certificate-Exporter Publish
on:
  push:
    branches:
      - develop
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.semvers.outputs.patch }} # set the app_version to be the PATCH updated version
      tag: ${{ steps.semvers.outputs.v_patch }} # set the tag to be the PATCH updated version.
    env:
      GITHUB_TOKEN: "${{ github.token }}"
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    # Get the current tag
    - name: 'Get Previous tag'
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        fallback: 1.0.0 # Optional fallback tag to use when no tag can be found
    # calculate the next version
    - name: 'Get next minor version'
      id: semvers
      uses: "WyriHaximus/github-action-next-semvers@v1"
      with:
        version: ${{ steps.previoustag.outputs.tag }}
    - run: echo "app_version ${{ steps.semvers.outputs.patch }}"
  docker:
    runs-on: ubuntu-latest
    needs: version
    steps:
    - name: Prepare
      id: prep
      run: |
        GHCR_IMAGE="ghcr.io/${{ github.repository }}";
        DOCKER_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/host-x509-certificate-exporter"
        TAGSZ="${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:${{ needs.version.outputs.app_version }},${GHCR_IMAGE}:latest,${GHCR_IMAGE}:${{ needs.version.outputs.app_version }}";
        BUILD_DATEZ="$(date +'%Y-%m-%dT%TZ%z' -u)";
        PROJECT_NAMEZ=`echo "${{ github.repository }}" | awk '{split($0,a,"/"); print a[2]}'`;
        echo BUILD_TAGS=${TAGSZ} >> $GITHUB_ENV;
        echo BUILD_DATE=${BUILD_DATEZ} >> $GITHUB_ENV;
        echo PROJECT_NAME=${PROJECT_NAMEZ} >> $GITHUB_ENV;

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Build and Push GHCR
      id: docker_build
      uses: docker/build-push-action@v4
      with:
        push: true
        build-args: |
          PROJECT_NAME="${{ env.PROJECT_NAME }}"
          BUILD_VERSION=${{ needs.version.outputs.app_version }}
          BUILD_REF=${{ github.ref }}
          BUILD_SHA=${{ github.sha }}
          BUILD_DATE=${{ env.BUILD_DATE }}
        tags: ${{ env.BUILD_TAGS }}
  merge:
    runs-on: ubuntu-latest
    needs:
    - docker
    - version
    steps:

    - uses: actions/checkout@v3
    - name: Merge develop -> main
      uses: devmasx/merge-branch@1.4.0
      with:
        type: now
        from_branch: develop
        target_branch: main
        github_token: ${{ github.token }}
    # https://github.com/marketplace/actions/create-tag
    - name: Create Tag
      uses: negz/create-tag@v1
      with:
        version: ${{ needs.version.outputs.tag }}
        message: ''
        token: ${{ github.token }}
